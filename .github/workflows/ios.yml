name: iOS

on:
  pull_request:
  push:
  release:
    types: [published]

jobs:
  build:
    name: iOS
    runs-on: macos-latest

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      APP_BUNDLE_ID: 'codes.redth.myamazingapp'
      APP_PROJECT: './MyAmazingApp/MyAmazingApp.csproj'
      APP_PROFILE_TYPE: 'IOS_APP_ADHOC'
      APP_CODESIGN_PROVISION: 'Automatic:AdHoc'
      APPLE_DIST_CERT: ${{ secrets.APPLE_DIST_CERT }}
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}

    steps:
    - name: 'üõí Checkout'
      uses: actions/checkout@v2

    #- name: 'ü™Ñ Install .NET'
    #  uses: actions/setup-dotnet@v3
    #  with:
    #    dotnet-version: 7.0.x

    - name: 'ü™Ñ Install AppleDev Tools'
      run: dotnet tool install -g AppleDev.Tools

    - name: 'ü™Ñ Install Apple Certificates & Profiles'
      shell: pwsh
      run: |
        apple ci provision `
          --certificate APPLE_DIST_CERT `
          --bundle-identifier ${{ env.APP_BUNDLE_ID }} `
          --profile-type IOS_APP_ADHOC `
          --profile-type IOS_APP_STORE `
          --api-key-id ${{ secrets.APP_STORE_CONNECT_KEY_ID }} `
          --api-issuer-id ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}

    - name: 'ü™Ñ Install .NET Workloads'
      run: dotnet workload install maui ios maccatalyst macos tvos android

    - name: '‚öíÔ∏è Build iOS'
      shell: pwsh
      run: |
        dotnet publish `
          -f net7.0-ios `
          -p:Configuration=Release `
          -p:RuntimeIdentifier=ios-arm64 `
          -p:ArchiveOnBuild=true `
          -p:CodesignProvision='${{ env.APP_CODESIGN_PROVISION }}' `
          -p:CodesignKey='${{ secrets.APPLE_DIST_CERT_NAME }}' `
          -bl:ios.binlog `
          "${{ env.APP_PROJECT }}"

    - name: 'ü™µ Artifacts: .ipa'
      uses: actions/upload-artifact@v1
      with:
        name: App.ipa
        path: ./**/*.ipa

    - name: 'ü™µ Artifacts: .binlog'
      uses: actions/upload-artifact@v1
      with:
        name: Binlogs
        path: ./**/*.binlog
